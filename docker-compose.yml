version: "3.3"

services:
  lesson1: &lesson1
    image: python:3
    volumes:
      - type: bind
        source: .
        target: /src
        read_only: true
    working_dir: /src
    command: python /src/lesson_1/code1.py

  lesson0:
    <<: *lesson1
    command: python /src/lesson_0/code.py

  lesson2: &lesson2
    build:
      context: docker
      dockerfile: lesson2.Dockerfile
    image: debug_lesson2
    environment:
      - PYTHONPATH=/src/vsi_common/python
    <<: *lesson1
    command: python /src/lesson_2/code2.py

  lesson3: &lesson3
    <<: *lesson2
    ports:
      - "5678:5678"
    working_dir: /src/lesson_3
    command: python code3.py

  lesson4:
    <<: *lesson2
    working_dir: /src/lesson_4
    command: bash -c 'python -m ptvsd --port 5678 --host 0.0.0.0 --wait code4.py'
    # network_mode: host
    ports:
      - "5678:5678"
    cap_add:
      - SYS_PTRACE

  lesson5: &lesson5
    <<: *lesson2
    working_dir: /src/lesson_5
    command: ./code5
    cap_add:
      - SYS_PTRACE

  build5: &build5
    <<: *lesson5
    volumes:
      - type: bind
        source: .
        target: /src
        read_only: false
####
      - type: bind
        source: /opt/projects/just/vsi_common
        target: /src/vsi_common
        read_only: true
####

  build6:
    <<: *build5
    working_dir: /src/lesson_6
    command: g++ code6.cpp -g -o code6

  lesson6:
    <<: *lesson5
    working_dir: /src/lesson_6
    command: ./code6

  build7:
    <<: *build5
    working_dir: /src/lesson_7
    command: g++ code7.cpp -g -o code7

  lesson7:
    <<: *lesson5
    working_dir: /src/lesson_7
    command: ./code7

  build8:
    <<: *build5
    working_dir: /src/lesson_8
    command: g++ code8.cpp -g -o code8

  lesson8:
    <<: *lesson5
    working_dir: /src/lesson_8
    command: bash -c ':;./code8'
    # Bash optimizies simple expressions. I either need complex or a zombie
    # reaper like tini. Just something else to be 1